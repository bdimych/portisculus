-----
общее

делаю в цигвине в xterm
в уме вспоминаю linux



-----
требования
	-ruby
		-библиотека ruby-mp3info - чтобы вынимать длину mp3 и отфильтровывать слишком длинные песни (бывают миксы на час и больше)
	-soundstretch
		собственно главная задача - определять/менять bpm
		умеет только wav поэтому надо декодировать lame
	-lame
		декодировать mp3->wav
	-mplayer
		если soundstretch не определил или определил неправильно,
		то можно посчитать вручную: mplayer играет, юзер нажимает пробел, скрипт считает нажатия
	
	
	

-----
база

просто текстовый файл построчно
/путь/каталог/
[флаг]/путь/каталог/песня1.mp3: bpm1
[флаг]/путь/каталог/песня2.mp3: bpm2

флаг:
"+" - лучшая песня
"-" - пропускать - песня не нравится или например дубль
"=" - чёткого размеренного ритма нет или слишком медленная, но не пропускать её а всё-таки копировать на плеер
	например вступление на альбом или просто хорошая песня отдышаться




-----
1-create-bpm-database.rb

заполняет базу
первое что нужно сделать - создать текстовый файл и записать пути к нужным каталогам с музыкой (отдельные файлы тоже можно)
потом запустить
./1-create-bpm-database.rb bpm-db.txt

скрипт найдёт *.mp3 файлы и попробует определить bpm
если автоматом неполучится, то предложит послушать и посчитать вручную

остановить - Ctrl-C

чтобы пересчитать файл
	например
/downloads/artist/song.mp3: 140
	надо в базе сделать:
		чтобы пересчитать автоматически - надо удалить bpm т.е.
/downloads/artist/song.mp3:
		чтобы пересчитать вручную - надо написать "byhands"
/downloads/artist/song.mp3: byhands
		(вручную считать приходится потому что
		1. soundstretch достаточно часто определяет половинный или даже четвертьной bpm т.е. вместо 160 может получиться 80 или 40
		2. с другой стороны бывает что основной ритм действительно небыстрый, но за один удар можно сделать два шага)
		




-----
2-fill-player.rb

заполняет плеер
алгоритм:
???

остановить - Ctrl-C






-----
3-order-files-in-player.rb

алгоритм:






	
